x-logging: &default-logging
  logging:
    driver: json-file
    options: { max-size: "10m", max-file: "3" }

services:
  api:
    <<: *default-logging
    build:
      context: ..
      dockerfile: ops/docker/api.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ../.env.example
    environment:
      APP_SERVICE_NAME: api-app
    ports:
      - ${EXPOSE_WEB_PORT:-8000}:8000

  telegram-bot:
    <<: *default-logging
    build:
      context: ..
      dockerfile: ops/docker/bot.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ../.env.example
    environment:
      APP_SERVICE_NAME: telegram-bot
    restart: unless-stopped

  celery-worker:
    <<: *default-logging
    build:
      context: ..
      dockerfile: ops/docker/worker.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ../.env.example
    environment:
      APP_SERVICE_NAME: celery-worker
    command: [ "celery", "-A", "apps.worker", "worker", "--loglevel=INFO" ]

  celery-beat:
    <<: *default-logging
    build:
      context: ..
      dockerfile: ops/docker/worker.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ../.env.example
    environment:
      APP_SERVICE_NAME: celery-beat
    command: [ "celery", "-A", "apps.worker", "beat", "--loglevel=INFO" ]

  postgres:
    <<: *default-logging
    image: postgis/postgis:17-3.5
    environment:
      POSTGRES_DB: ${DB_DATABASE:-app}
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD?}
      TZ: Europe/Kyiv
      PGTZ: Europe/Kyiv
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-user} -d ${DB_DATABASE:-app} -h 127.0.0.1 -p 5432" ]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  redis:
    <<: *default-logging
    image: redis:8.2
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped
volumes:
  pgdata:
